{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ba8b753cc9e1ce9efcc2","webpack:///./src/stats.js","webpack:///./src/gwas-credible-sets.js","webpack:///./src/scoring.js","webpack:///./src/marking.js"],"names":["ninv","p","SPLIT1","SPLIT2","CONST1","CONST2","a","b","c","d","e","f","q","r","x","Math","abs","sqrt","log","rollup","scoring","stats","marking","_nlogp_to_z2","nlogp","pow","bayesFactors","nlogpvals","cap","Array","isArray","length","z2","map","item","capValue","max","exp","findCredibleSet","statistics","cutoff","Number","isNaN","statsTotal","reduce","sortedStatsMap","index","sort","runningTotal","result","fill","i","value","score","markCredibleSetBoolean","setMembers","markCredibleSetScaled","setMemberScores","sumMarkers"],"mappings":"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","file":"gwas-credible-sets.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gwasCredibleSets\"] = factory();\n\telse\n\t\troot[\"gwasCredibleSets\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba8b753cc9e1ce9efcc2","/** @module stats */\n\n/**\n * The inverse of the CDF. May be used to determine the z-score for the desired quantile.\n *\n * This is an implementation of algorithm AS241:\n *     https://www.jstor.org/stable/2347330\n * @param {number} p The desired quantile of the normal distribution\n * @returns {number}\n */\nfunction ninv(p) {\n    const SPLIT1 = 0.425;\n    const SPLIT2 = 5.0;\n    const CONST1 = 0.180625;\n    const CONST2 = 1.6;\n    const a = [\n        3.3871328727963666080E0,\n        1.3314166789178437745E2,\n        1.9715909503065514427E3,\n        1.3731693765509461125E4,\n        4.5921953931549871457E4,\n        6.7265770927008700853E4,\n        3.3430575583588128105E4,\n        2.5090809287301226727E3\n    ];\n\n    const b = [\n        4.2313330701600911252E1,\n        6.8718700749205790830E2,\n        5.3941960214247511077E3,\n        2.1213794301586595867E4,\n        3.9307895800092710610E4,\n        2.8729085735721942674E4,\n        5.2264952788528545610E3\n    ];\n\n    const c = [\n        1.42343711074968357734E0,\n        4.63033784615654529590E0,\n        5.76949722146069140550E0,\n        3.64784832476320460504E0,\n        1.27045825245236838258E0,\n        2.41780725177450611770E-1,\n        2.27238449892691845833E-2,\n        7.74545014278341407640E-4\n    ];\n\n    const d = [\n        2.05319162663775882187E0,\n        1.67638483018380384940E0,\n        6.89767334985100004550E-1,\n        1.48103976427480074590E-1,\n        1.51986665636164571966E-2,\n        5.47593808499534494600E-4,\n        1.05075007164441684324E-9\n    ];\n\n    const e = [\n        6.65790464350110377720E0,\n        5.46378491116411436990E0,\n        1.78482653991729133580E0,\n        2.96560571828504891230E-1,\n        2.65321895265761230930E-2,\n        1.24266094738807843860E-3,\n        2.71155556874348757815E-5,\n        2.01033439929228813265E-7\n    ];\n\n    const f = [\n        5.99832206555887937690E-1,\n        1.36929880922735805310E-1,\n        1.48753612908506148525E-2,\n        7.86869131145613259100E-4,\n        1.84631831751005468180E-5,\n        1.42151175831644588870E-7,\n        2.04426310338993978564E-15\n    ];\n\n    const q = p - 0.5;\n    let r, x;\n\n    if (Math.abs(q) < SPLIT1) {\n        r = CONST1 - q * q;\n        return q * ((((((( a[7] * r + a[6] ) * r + a[5] ) * r + a[4] ) * r\n            + a[3] ) * r + a[2] ) * r + a[1] ) * r + a[0] ) /\n            ((((((( b[6] * r + b[5] ) * r + b[4] ) * r + b[3] ) * r\n                + b[2] ) * r + b[1] ) * r + b[0] ) * r + 1.0 );\n    }\n    else {\n        if (q < 0) {\n            r = p\n        }\n        else {\n            r = 1.0 - p\n        }\n\n        if (r > 0) {\n            r = Math.sqrt(-Math.log(r));\n            if (r <= SPLIT2) {\n                r -= CONST2;\n                x = ((((((( c[7] * r + c[6] ) * r + c[5] ) * r + c[4] ) * r\n                    + c[3] ) * r + c[2] ) * r + c[1] ) * r + c[0] ) /\n                    ((((((( d[6] * r + d[5] ) * r + d[4] ) * r + d[3] ) * r\n                        + d[2] ) * r + d[1] ) * r + d[0] ) * r + 1.0 );\n            }\n            else {\n                r -= SPLIT2;\n                x = ((((((( e[7] * r + e[6] ) * r + e[5] ) * r + e[4] ) * r\n                    + e[3] ) * r + e[2] ) * r + e[1] ) * r + e[0] ) /\n                    ((((((( f[6] * r + f[5] ) * r + f[4] ) * r + f[3] ) * r\n                        + f[2] ) * r + f[1] ) * r + f[0] ) * r + 1.0 );\n            }\n        }\n        else {\n            throw('Not implemented')\n        }\n\n        if (q < 0) {\n            x = -x\n        }\n\n        return x;\n    }\n}\n\n// Hack: A single global object representing the contents of the module\nconst rollup = { ninv };\n\nexport { ninv };\nexport default rollup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/stats.js","/** @module gwas-credible-sets */\n\nimport stats from './stats';\nimport scoring from './scoring';\nimport marking from './marking';\n\n\n// HACK: Because a primary audience is targets that do not have any module system, we will expose submodules from the\n//  top-level module. (by representing each sub-module as a \"rollup object\" that exposes its internal methods)\n// Then, submodules may be accessed as `window.gwasCredibleSets.stats`, etc\n\n// If you are using a real module system, please import from sub-modules directly- these global helpers are a bit of\n//  a hack and may go away in the future\nexport { scoring, stats, marking };\n\n\n\n// WEBPACK FOOTER //\n// ./src/gwas-credible-sets.js","/** @module scoring */\n\nimport { ninv } from './stats';\n\n\n/**\n * Convert a -logp value to Z^2.\n *\n * Very large -logp (very small p values) cannot be converted to z by a direct method. These values\n *  are handled using an approximation: for small p-values, Z_i^2 has a linear relationship with -log10 p-value.\n *\n *  The cutoff on pvalues is ~ 10^-325\n *\n * @param nlogp\n * @return {number}\n * @private\n */\nfunction _nlogp_to_z2(nlogp) {\n    const p = Math.pow(10, -nlogp);\n    if (nlogp < 300) {\n        // Use exact method when within the range of 64-bit floats (approx 10^-325)\n        return Math.pow(ninv(p / 2), 2);\n    }\n    else {\n        // For very small p-values, -log10(pval) and z^2 have a linear relationship\n        // This avoids issues with needing higher precision floats when doing the calculation\n        // with ninv\n        return (4.59884133027944 * nlogp) - 5.88085867031722\n    }\n}\n\n/**\n * Calculate a probability statistic exp(Z^2 / 2) based on pvalues. If the Z-score is very large, the bayes factors\n *  can be calculated in an inexact (capped) manner that makes the calculation tractable but preserves comparisons\n * @param {Number[]} nlogpvals An array of -log(pvalue) entries\n * @param {Boolean} [cap=true] Whether to apply an inexact method. If false, some values in the return array may\n *  be represented as \"Infinity\", but the bayes factors will be directly calculated wherever possible.\n * @return {Number[]} An array of exp(Z^2 / 2) statistics\n */\nfunction bayesFactors(nlogpvals, cap=true) {\n    if (!Array.isArray(nlogpvals) || ! nlogpvals.length) {\n        throw 'Must provide a non-empty array of pvalues';\n    }\n\n    // 1. Convert the pvalues to Z^2 values\n    let z2 = nlogpvals.map(item => _nlogp_to_z2(item));\n\n    // 2. Calculate bayes factor, using a truncation approach that prevents overrunning the max float64 value\n    //   (when Z^2 /2 > 709 or so). As safeguard, we could (but currently don't) check that exp(Z^2) is not larger\n    //   than infinity.\n    if (cap) {\n        const capValue = Math.max(...z2) - 708; // The real cap is ~709; this should prevent any value from exceeding it\n        if (capValue > 0) {\n            z2 = z2.map(item => (item - capValue));\n        }\n    }\n    return z2.map(item => Math.exp(item));\n}\n\nconst rollup = { bayesFactors };\nexport default rollup;\nexport { bayesFactors };\n\n// Export additional symbols for unit testing only (not part of public interface for the module)\nexport { _nlogp_to_z2 };\n\n\n\n// WEBPACK FOOTER //\n// ./src/scoring.js","/** @module marking */\n\n/**\n * Given a set of probabilities, determine which contribute most to a sum, and are thus members of the credible set.\n *   Return a mask of `statistics`, where values for non-set-members are set to 0.\n * @param {Number[]} statistics Calculated statistics used to rank the credible set\n * @param {Number} [cutoff=0.95] Keep taking items until we have accounted for >= this fraction of the total probability\n * @return {Number[]} A mask of the statistics array, showing the originally provided value for items in the credible\n *  set, and zero for items not in the set.\n *  This array should be the same length as the provided statistic array\n */\nfunction findCredibleSet(statistics, cutoff=0.95) {\n    // Type checking\n    if (!Array.isArray(statistics) || !statistics.length) {\n        throw 'Statistics must be a non-empty array';\n    }\n    if (!(typeof cutoff === 'number' ) || cutoff < 0 || cutoff > 1.0 || Number.isNaN(cutoff)) {\n        throw 'Cutoff must be a number between 0 and 1';\n    }\n\n    const statsTotal = statistics.reduce((a, b) => a + b, 0);\n    if (statsTotal <= 0) {\n        throw 'Sum of provided statistics must be > 0';\n    }\n\n    // Sort the statistics by largest first, while preserving a map to original item order\n    const sortedStatsMap = statistics\n        .map((item, index) => [item, index])\n        .sort((a, b) => (b[0] - a[0]));\n\n    let runningTotal = 0;\n    const result = new Array(sortedStatsMap.length).fill(0);\n    for (let i = 0; i < sortedStatsMap.length; i++) {\n        let [value, index] = sortedStatsMap[i];\n        if (runningTotal < cutoff) {\n            const score = value / statsTotal;\n            result[index] = score;\n            runningTotal += score;\n        } else {\n            break;\n        }\n    }\n    return result;\n}\n\n/**\n * Analyze a set of probabilities and return booleans indicating which items contribute to the credible set.\n *\n * This is a helper method for, eg, visualizing the members of the credible set by raw membership.\n *\n * @param {Number[]} statistics Calculated statistics used to rank the credible set\n * @param {Number} [cutoff=0.95] Keep taking items until we have accounted for >= this fraction of the total probability\n * @return {Boolean[]} An array of booleans identifying whether or not each item is in the credible set\n *  This array should be the same length as the provided statistics array\n */\nfunction markCredibleSetBoolean(statistics, cutoff=0.95) {\n    const setMembers = findCredibleSet(statistics, cutoff);\n    return setMembers.map(item => !!item);\n}\n\n/**\n * Analyze a set of probabilities and return a fraction saying how much each item contributes to the credible set.\n *   For example, if a single item accounts for 96% of total probabilities, then for the 95% credible set,\n *   that item would be scaled to \"1.0\" (because it alone represents the entire credible set and then some).\n *\n * This is a helper method for, eg, visualizing the relative significance of contributions to the credible set.\n *\n * @param {Number[]} statistics Calculated statistics used to rank the credible set\n * @param {Number} [cutoff=0.95] Keep taking items until we have accounted for >= this fraction of the total probability\n * @return {Number[]} An array of numbers representing the fraction of credible set probabilities this item accounts for.\n *  This array should be the same length as the provided statistics array\n */\nfunction markCredibleSetScaled(statistics, cutoff=0.95) {\n    const setMemberScores = findCredibleSet(statistics, cutoff);\n    const sumMarkers = setMemberScores.reduce((a, b) => a + b, 0);\n    return setMemberScores.map(item => item / sumMarkers);\n}\n\nconst rollup = { findCredibleSet, markCredibleSetBoolean, markCredibleSetScaled };\nexport default rollup;\nexport { findCredibleSet, markCredibleSetBoolean, markCredibleSetScaled };\n\n\n\n// WEBPACK FOOTER //\n// ./src/marking.js"],"sourceRoot":""}